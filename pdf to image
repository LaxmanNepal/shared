<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Convert PDF files to high-quality images online for free. Fast, secure, and easy-to-use PDF to image converter.">
    <meta name="keywords" content="PDF to Image, PDF Converter, Image Converter, Free PDF Tool">
    <meta name="author" content="laxmannepal.com.np">
    <title>PDF to Image Converter - laxmannepal.com.np</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #6366f1;
            --secondary: #8b5cf6;
            --accent: #ec4899;
            --background: #f8fafc;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, var(--background) 0%, #e2e8f0 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 2.5rem;
            border-radius: 1.5rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 800px;
            transform: translateY(0);
            opacity: 1;
            transition: all 0.4s ease;
        }

        h1 {
            color: #1e293b;
            font-size: 2.2rem;
            margin-bottom: 0.8rem;
            text-align: center;
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .upload-section {
            position: relative;
            margin: 2rem 0;
        }

        .file-input {
            display: none;
        }

        .file-label {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 3rem 2rem;
            border: 3px dashed #cbd5e1;
            border-radius: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.5);
        }

        .file-label:hover {
            border-color: var(--primary);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(99, 102, 241, 0.2);
        }

        #imageContainer {
            margin: 2rem 0;
            display: grid;
            gap: 1.5rem;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        }

        .thumbnail-container {
            position: relative;
            border-radius: 1rem;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .thumbnail-container:hover {
            transform: translateY(-5px);
        }

        .thumbnail {
            width: 100%;
            height: 250px;
            object-fit: cover;
            border-radius: 1rem;
        }

        .download-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 8px;
            font-size: 0.9rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 6px;
            opacity: 0;
            transform: translateY(10px);
            transition: all 0.3s ease;
        }

        .thumbnail-container:hover .download-btn {
            opacity: 1;
            transform: translateY(0);
        }

        .download-btn svg {
            width: 16px;
            height: 16px;
        }

        #downloadAll {
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            color: white;
            border: none;
            padding: 1rem 2.5rem;
            border-radius: 0.75rem;
            font-size: 1.1rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            display: none;
            margin: 20px auto;
        }

        #downloadAll:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(99, 102, 241, 0.3);
        }

        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 4px solid #f1f5f9;
            border-top-color: var(--primary);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 2rem auto;
            display: none;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .progress-bar {
            width: 0%;
            height: 4px;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            position: fixed;
            top: 0;
            left: 0;
            transition: width 0.3s ease;
        }
    </style>
</head>
<body>
    <div class="progress-bar"></div>
    
    <div class="container">
        <h1>PDF to Image Converter</h1>
        
        <div class="upload-section">
            <input type="file" id="pdfInput" class="file-input" accept="application/pdf">
            <label for="pdfInput" class="file-label">
                <svg class="upload-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                          d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"/>
                </svg>
                <span>Drag & Drop PDF or Click to Upload</span>
                <p style="color: #94a3b8; margin-top: 0.5rem; font-size: 0.9rem;">
                    Max file size: 25MB
                </p>
            </label>
        </div>

        <div id="imageContainer"></div>
        <div class="loading-spinner"></div>
        
        <button id="downloadAll">
            <svg style="width: 20px; height: 20px;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                      d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"/>
            </svg>
            Download All Images
        </button>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.min.js"></script>
    <script>
        const container = document.querySelector('.container');
        const spinner = document.querySelector('.loading-spinner');
        const progressBar = document.querySelector('.progress-bar');
        let imageDataUrls = [];

        // File handling
        document.addEventListener('dragover', handleDragOver);
        document.addEventListener('drop', handleDrop);
        document.getElementById('pdfInput').addEventListener('change', handleFileSelect);

        function handleDragOver(e) {
            e.preventDefault();
            container.classList.add('dragover');
        }

        function handleDrop(e) {
            e.preventDefault();
            container.classList.remove('dragover');
            handleFile(e.dataTransfer.files[0]);
        }

        function handleFileSelect(e) {
            handleFile(e.target.files[0]);
        }

        function handleFile(file) {
            if (!file || file.type !== 'application/pdf') {
                alert('Please upload a valid PDF file');
                return;
            }

            startLoading();
            const reader = new FileReader();
            reader.onload = (e) => renderPDF(new Uint8Array(e.target.result));
            reader.readAsArrayBuffer(file);
        }

        async function renderPDF(pdfData) {
            try {
                const pdf = await pdfjsLib.getDocument({ data: pdfData }).promise;
                const imageContainer = document.getElementById('imageContainer');
                imageContainer.innerHTML = '';
                imageDataUrls = [];
                
                for (let i = 1; i <= pdf.numPages; i++) {
                    const page = await pdf.getPage(i);
                    const viewport = page.getViewport({ scale: 2 });
                    const canvas = document.createElement('canvas');
                    const ctx = canvas.getContext('2d');
                    canvas.height = viewport.height;
                    canvas.width = viewport.width;

                    await page.render({ canvasContext: ctx, viewport }).promise;
                    const dataUrl = canvas.toDataURL('image/png');
                    imageDataUrls.push(dataUrl);

                    // Create thumbnail with download button
                    const thumbnail = document.createElement('div');
                    thumbnail.className = 'thumbnail-container';
                    thumbnail.innerHTML = `
                        <img class="thumbnail" src="${dataUrl}" alt="Page ${i}">
                        <button class="download-btn" onclick="downloadImage(${i - 1})">
                            <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                      d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"/>
                            </svg>
                        </button>
                    `;
                    imageContainer.appendChild(thumbnail);

                    progressBar.style.width = `${(i / pdf.numPages) * 100}%`;
                }

                document.getElementById('downloadAll').style.display = 'block';
                stopLoading();
            } catch (error) {
                alert('Error processing PDF: ' + error.message);
                stopLoading();
            }
        }

        // Download functions
        window.downloadImage = (index) => {
            const link = document.createElement('a');
            link.href = imageDataUrls[index];
            link.download = `laxmannepal.com.np-page-${index + 1}.png`;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        };

        document.getElementById('downloadAll').addEventListener('click', () => {
            imageDataUrls.forEach((dataUrl, index) => {
                const link = document.createElement('a');
                link.href = dataUrl;
                link.download = `laxmannepal.com.np-page-${index + 1}.png`;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            });
        });

        function startLoading() {
            spinner.style.display = 'block';
            progressBar.style.width = '0%';
        }

        function stopLoading() {
            spinner.style.display = 'none';
            progressBar.style.width = '0%';
        }
    </script>
</body>
</html>
