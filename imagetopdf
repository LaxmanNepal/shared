<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HTK Image to PDF Converter</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/exif-js"></script>
    <style>
        :root {
            --primary: #2c3e50;
            --secondary: #3498db;
            --background: #f8f9fa;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            touch-action: manipulation;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: var(--background);
            min-height: 100vh;
            padding: 1rem;
            line-height: 1.5;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 1.5rem;
            box-shadow: 0 4px 30px rgba(0,0,0,0.1);
            padding: 1.5rem;
        }

        .upload-area {
            border: 2px dashed var(--primary);
            border-radius: 1rem;
            padding: 2rem;
            text-align: center;
            margin: 1rem 0;
            background: rgba(52, 152, 219, 0.05);
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .upload-area:hover {
            border-color: var(--secondary);
            background: rgba(52, 152, 219, 0.1);
        }

        .preview-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 0.75rem;
            margin: 1.5rem 0;
        }

        .preview-item {
            position: relative;
            border-radius: 0.75rem;
            overflow: hidden;
            aspect-ratio: 1;
        }

        .preview-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .settings-toggle {
            background: none;
            border: none;
            padding: 0.5rem;
            cursor: pointer;
            position: absolute;
            right: 1rem;
            top: 1rem;
        }

        .advanced-settings {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease-out;
        }

        .settings-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 1rem;
            margin: 1rem 0;
        }

        .setting-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        select, input {
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 0.5rem;
            width: 100%;
        }

        #convertBtn {
            background: var(--secondary);
            color: white;
            border: none;
            padding: 1rem 2rem;
            border-radius: 0.75rem;
            font-size: 1rem;
            cursor: pointer;
            width: 100%;
            margin-top: 1rem;
        }

        .faq-section {
            margin-top: 2rem;
            border-top: 1px solid #eee;
            padding-top: 1rem;
        }

        .faq-item {
            margin: 1rem 0;
            padding: 1rem;
            background: var(--background);
            border-radius: 0.5rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 style="text-align: center; margin-bottom: 1rem; color: var(--primary);">
            üñºÔ∏è HTK Image to PDF Converter
        </h1>

        <div class="upload-area" onclick="document.getElementById('fileInput').click()">
            <p style="color: var(--primary); font-size: 1.1rem;">
                üì§ Click or Drop Images Here
            </p>
            <input type="file" id="fileInput" multiple accept="image/*" hidden>
        </div>

        <button class="settings-toggle" onclick="toggleSettings()">‚öôÔ∏è Settings</button>

        <div class="advanced-settings" id="settingsPanel">
            <div class="settings-grid">
                <div class="setting-group">
                    <label>Paper Size:</label>
                    <select id="paperSize">
                        <option value="A4">A4 (210√ó297mm)</option>
                        <option value="Letter">Letter (8.5√ó11in)</option>
                        <option value="Legal">Legal (8.5√ó14in)</option>
                    </select>
                </div>
                
                <div class="setting-group">
                    <label>Orientation:</label>
                    <select id="orientation">
                        <option value="portrait">Portrait</option>
                        <option value="landscape">Landscape</option>
                    </select>
                </div>

                <div class="setting-group">
                    <label>Margins (mm):</label>
                    <input type="number" id="margins" value="10" min="0" max="50">
                </div>

                <div class="setting-group">
                    <label>Quality:</label>
                    <input type="range" id="quality" min="0.5" max="1" step="0.1" value="0.8">
                </div>
            </div>
        </div>

        <div class="preview-container" id="previewContainer"></div>

        <button id="convertBtn" onclick="startConversion()" disabled>
            üöÄ Convert to PDF (Max 50 Images)
        </button>

        <div class="faq-section">
            <h3>FAQ</h3>
            <div class="faq-item">
                <strong>Q: What image formats are supported?</strong>
                <p>A: JPG, PNG, WEBP, BMP (Max 10MB per file)</p>
            </div>
            <div class="faq-item">
                <strong>Q: How to rotate images?</strong>
                <p>A: Click the circular arrow icon on image preview</p>
            </div>
        </div>
    </div>

    <script>
        const MAX_FILES = 50;
        const MAX_SIZE = 10 * 1024 * 1024; // 10MB
        let files = [];

        // Elements
        const fileInput = document.getElementById('fileInput');
        const previewContainer = document.getElementById('previewContainer');
        const convertBtn = document.getElementById('convertBtn');

        // File Handling
        fileInput.addEventListener('change', handleFiles);
        
        async function handleFiles(e) {
            const newFiles = Array.from(e.target.files);
            
            // Validate files
            if(newFiles.length > MAX_FILES) {
                alert(`Maximum ${MAX_FILES} files allowed`);
                return;
            }
            
            for(const file of newFiles) {
                if(file.size > MAX_SIZE) {
                    alert(`${file.name} exceeds 10MB limit`);
                    return;
                }
            }

            files = newFiles;
            convertBtn.disabled = files.length === 0;
            showPreviews();
        }

        // Show Image Previews
        async function showPreviews() {
            previewContainer.innerHTML = '';
            
            for(const [index, file] of files.entries()) {
                const reader = new FileReader();
                reader.onload = async (e) => {
                    const img = await processImage(file, e.target.result);
                    createPreview(img, index);
                };
                reader.readAsDataURL(file);
            }
        }

        // Process Image with EXIF
        async function processImage(file, dataUrl) {
            return new Promise((resolve) => {
                const img = new Image();
                img.src = dataUrl;
                
                img.onload = () => {
                    EXIF.getData(img, function() {
                        const orientation = EXIF.getTag(this, 'Orientation');
                        const canvas = fixOrientation(img, orientation);
                        resolve(canvas);
                    });
                };
            });
        }

        // Fix Image Orientation
        function fixOrientation(img, orientation) {
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            
            // Set canvas dimensions
            if([5,6,7,8].includes(orientation)) {
                canvas.width = img.height;
                canvas.height = img.width;
            } else {
                canvas.width = img.width;
                canvas.height = img.height;
            }

            // Transform context
            switch(orientation) {
                case 2: ctx.transform(-1, 0, 0, 1, img.width, 0); break;
                case 3: ctx.transform(-1, 0, 0, -1, img.width, img.height); break;
                case 4: ctx.transform(1, 0, 0, -1, 0, img.height); break;
                case 5: ctx.transform(0, 1, 1, 0, 0, 0); break;
                case 6: ctx.transform(0, 1, -1, 0, img.height, 0); break;
                case 7: ctx.transform(0, -1, -1, 0, img.height, img.width); break;
                case 8: ctx.transform(0, -1, 1, 0, 0, img.width); break;
            }

            ctx.drawImage(img, 0, 0);
            return canvas;
        }

        // Create Preview Item
        function createPreview(canvas, index) {
            const item = document.createElement('div');
            item.className = 'preview-item';
            
            const img = document.createElement('img');
            img.className = 'preview-image';
            img.src = canvas.toDataURL();
            
            item.appendChild(img);
            previewContainer.appendChild(item);
        }

        // PDF Conversion
        async function startConversion() {
            convertBtn.disabled = true;
            convertBtn.textContent = 'Processing...';

            const pdf = new jspdf.jsPDF({
                orientation: document.getElementById('orientation').value,
                unit: 'mm',
                format: document.getElementById('paperSize').value
            });

            const margins = parseInt(document.getElementById('margins').value);
            const quality = parseFloat(document.getElementById('quality').value);

            for(const [index, file] of files.entries()) {
                const img = await processImage(file, URL.createObjectURL(file));
                const pageWidth = pdf.internal.pageSize.getWidth();
                const pageHeight = pdf.internal.pageSize.getHeight();
                
                const imgWidth = pageWidth - (margins * 2);
                const imgHeight = (img.height * imgWidth) / img.width;

                pdf.addImage(img, 'JPEG', margins, margins, imgWidth, imgHeight, null, 'MEDIUM', quality);
                
                if(index < files.length - 1) pdf.addPage();
            }

            pdf.save(`hamrotechnicalknowledge-${Date.now()}.pdf`);
            convertBtn.disabled = false;
            convertBtn.textContent = 'üöÄ Convert to PDF (Max 50 Images)';
        }

        // Toggle Settings
        function toggleSettings() {
            const panel = document.getElementById('settingsPanel');
            panel.style.maxHeight = panel.style.maxHeight ? null : `${panel.scrollHeight}px`;
        }
    </script>
</body>
</html>
